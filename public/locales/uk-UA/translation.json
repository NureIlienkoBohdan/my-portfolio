{
  "navbar": {
    "resume": "Резюме",
    "contact": "Зв'язатися"
  },
  "home": {
    "title": "Привіт, я Богдан Ільєнко",
    "subtitle-1": "Я Full-Stack розробник",
    "subtitle-2": "з 2 річним досвідом роботи."
  },
  "about": {
    "title": "Про мене",
    "paragraph-1": "Я відповідальний професіонал, який ефективно справляється з численними завданнями, зберігаючи високу ефективність роботи. Я охоче беру на себе додаткові обов’язки, щоб сприяти досягненню цілей команди, і моя увага до деталей доповнюється сильними соціальними навичками, які сприяють ефективній співпраці в команді розробників.",
    "paragraph-2": "Як розробник, я захоплений створенням елегантних і ефективних рішень для складних завдань. Мій набір навичок охоплює як front-end, так і back-end технології, включаючи React, Redux, Nest.js, а також досвід роботи з архітектурою мікросервісів із Kubernetes, Docker і RabbitMQ. Розробляючи системи з різними вимогами, я вдало використовував як реляційні бази даних, такі як PostgreSQL і MySQL, так і нереляційні, такі як MongoDB і DynamoDB. Я також маю значний досвід у тестуванні програмного забезпечення, використовуючи Jest і Mocha для юніт-тестів, інтеграційних тестів та e2e тестування. Протягом своєї кар’єри я успішно працював над різноманітними проектами, починаючи від простих статичних веб-сайтів і закінчуючи складними додатками корпоративного рівня.",
    "paragraph-3": "Я добре розбираюся в різноманітних інструментах розробки та деплою таких як Docker, Kubernetes, Git, GitHub Actions і AWS (EC2, RDS, EKS, Cognito, S3 Bucket, Lambda, Amplify), забезпечуючи безперебійне виконання проектів. Постійно шукаючи можливості для професійного зростання, я освоюю нові технології та активно шукаю шляхи вдосконалення своїх навичок і знань. Моє прагнення до досконалості поширюється на оптимізацію продуктивності, покращення взаємодії з користувачем і підтримку найвищих стандартів якості коду в кожному моєму проекті."
  },
  "skills": {
    "title": "Мої навички",
    "Node.js": "Опановуючи розробку серверної частину за допомогою Node.js, Express.js і MongoDB, я створював надійні REST API, які забезпечують мої проекти.",
    "React JS": "Я використовую React для створення високопродуктивних і динамічних інтерфейсів користувача, які забезпечують найкращий досвід користувача.",
    "Nest.js": "Розробляючи масштабовані серверні системи з Nest.js, TypeORM і PostgreSQL, я отримав досвід розробки RESTful API для бездоганної інтеграції.",
    "Docker": "Використовуючи Docker, я контейнеризував програми, спрощуючи розгортання та забезпечуючи узгоджене середовище.",
    "Kubernetes": "Керуючи масштабованими та відмовостійкими додатками за допомогою Kubernetes, розгортав кластери та підтримував їх.",
    "RabbitMQ": "Використовуючи RabbitMQ, я створював масштабовані системи, які забезпечують надійну комунікацію між мікросервісами.",
    "PostgreSQL": "З PostgreSQL я створював надійні бази даних, що стають надійною опорою для роботи із інформацією.",
    "MongoDB": "Працюючи із MongoDB, використовував усі переваги NoSQL, щоб створити надійні бази даних.",
    "AWS": "З AWS я працював з EC2, RDS, EKS, Cognito, S3, Lambda, Amplify та іншими сервісами для розгортання, управління додатками і забезпечення безпеки та автентифікації.",
    "GraphQL": "Використовуючи GraphQL та Apollo Client, я створюю ефективні API, оптимізуючи передачу даних між клієнтом і сервером.",
    "TypeScript": "Завдяки TypeScript забезпечую надійність і підтримку коду, покращуючи процес розробки через статичну типізацію.",
    "Jest & Mocha": "Застосовуючи Jest і Mocha, я виконую unit, integration та e2e тестування для забезпечення стабільності та якості коду на всіх етапах розробки."
  },
  "projects": {
    "title": "Мої проекти",
    "skillhub": "SkillHub – онлайн-система для творчих людей, які хочуть поділитися своєю творчістю та дізнатися щось нове про мистецтво. Він був створений за допомогою React, Redux, Nest.js, Docker і PostgreSQL.",
    "pharmacy": "Серверний API Nest.js використовує MS SQL і включає JWT для безпечних маршрутів і доступу на основі ролей. Swagger забезпечує точну документацію REST API. Він створює чеки у форматі PDF, надає основну статистику продажів і популярності ліків.",
    "ticketing": "Невеликий мікросервісний додаток, який містить логіку для замовлення квитків на події. Має відмовостійку архітектуру, яка забезпечує надійну комунікацію між мікросервісами за допомогою RabbitMQ. Реалізовано рішення проблем паралелізму. Цей проект був створений за допомогою Node.js, Express.js, MongoDB, Docker, Kubernetes і NATS."
  },
  "get-in-touch": {
    "title": "Зв'язатися",
    "paragraph": "Я завжди відкритий для нових можливостей. Якщо ви хочете співпрацювати зі мною або просто поговорити, напишіть мені.",
    "button": "Написати"
  }
}
